//NOTE: SWIG does not like the map data structure used to store function handles for each Isotope
//      One should comment out line 72 of Isotope.h before the first swig command, then uncomment
//      line 72 before compiling Isotope.cpp using the c++ compiler (g++)


wboyd > g++ -c -fPIC ../src/log.h ../src/log.cpp
wboyd > g++ -c -fPIC ../src/xsreader.h ../src/xsreader.cpp
wboyd > swig -python -c++ Isotope.i
wboyd > g++ -c -fPIC ../src/Isotope.cpp Isotope_wrap.cxx -I/usr/include/python2.7
wboyd > g++ -shared Isotope.o xsreader.o log.o  Isotope_wrap.o -o _isotope.so
wboyd > python
Python 2.7.3 (default, Aug  1 2012, 05:14:39) 
[GCC 4.6.3] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import isotope
>>> h1 = isotope.Isotope()
>>> h1.setA(1)
>>> h1.getA()
1
>>> h1.setN(1E23)
>>> h1.getN()
9.999999778196308e+22
>>> h1.setTemperature(293)
>>> h1.getTemperature()
293.0
>>> h1.isFissionable()
False
>>> h1.loadXS('H1_artificial_abs_xs.txt', CAPTURE, '\t')
>>> h1.getCaptureXS(2)
315.20989990234375
>>> h1.getCaptureXS(2.0)
0.22360697388648987
>> h1.initializeThermalScattering(1E-6, 15, 1000, 15)
>>> h1.getThermalScatteringEnergy(1E-1)
0.12709061801433563
>>> h1.getThermalScatteringEnergy(1E-1)
0.06822007894515991
>>> h1_new = h1.clone()
>>> h1_new.getElasticXS(1E-2)
3.1622793674468994
>>> h1.getCollisionType(1E3)
0
>>> h1.getCollisionType(1E3)
3
>>> h1.getCollisionType(1E3)
1
>>> h1.getCollisionType(1E3)
3	
>>> h1.getCollisionType(1E3)

