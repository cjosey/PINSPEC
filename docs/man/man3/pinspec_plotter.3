.TH "pinspec.plotter" 3 "Thu Apr 11 2013" "Version v0.1" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pinspec.plotter \- 
.PP
The plotter module provides utility functions to plot data from PINSPEC's C++ classes, in particular, tally data and cross-sections, thermal scattering PDFs/CDFs, etc\&.  

.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "def \fBplotMicroXS\fP"
.br
.RI "\fIPlots the microscopoic cross-section(s) for one or more reaction rates for an isotope\&. \fP"
.ti -1c
.RI "def \fBplotMacroXS\fP"
.br
.RI "\fIPlots the macroscopic cross-section(s) for one or more reaction rates for a material\&. \fP"
.ti -1c
.RI "def \fBplotFlux\fP"
.br
.RI "\fIPlots one or more flux tallies by energy\&. \fP"
.ti -1c
.RI "def \fBplotThermalScattering\fP"
.br
.RI "\fIPlots the thermal scattering PDFs and CDFs for an isotope\&. \fP"
.ti -1c
.RI "def \fBplotFissionSpectrum\fP"
.br
.RI "\fIPlots the fission spectrum PDF and CDF\&. \fP"
.ti -1c
.RI "def \fBplotRI\fP"
.br
.RI "\fIPlots a resonance integral (RIEff or RITrue) as a step function\&. \fP"
.ti -1c
.RI "def \fBplotGroupXS\fP"
.br
.RI "\fIPlots a multi-group cross-section as a step function\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBflux_plot_num\fP = 0"
.br
.RI "\fIA static variable to auto-generate unique filenames for flux plots\&. \fP"
.ti -1c
.RI "string \fBsubdirectory\fP = '/plots/'"
.br
.RI "\fIA static variable for the output directory in which to save plots\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
The plotter module provides utility functions to plot data from PINSPEC's C++ classes, in particular, tally data and cross-sections, thermal scattering PDFs/CDFs, etc\&. 

\fBAuthor:\fP
.RS 4
Samuel Shaner (shaner@mit.edu) 
.PP
William Boyd (wboyd@mit.edu 
.RE
.PP
\fBDate:\fP
.RS 4
March 10, 2013 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "def pinspec\&.plotter\&.plotFissionSpectrum ()"

.PP
Plots the fission spectrum PDF and CDF\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotFissionSpectrum()
.fi
.PP
 
.SS "def pinspec\&.plotter\&.plotFlux (fluxes, loglog = \fCTrue\fP, uselegend = \fCTrue\fP, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots one or more flux tallies by energy\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotFlux(my_flux, title='one flux')
pinspec\&.plotter\&.plotFlux([flux1, flux2], title='two fluxes')
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIfluxes\fP the flux tall(ies) of interest 
.br
\fIloglog\fP an optional argument boolean to use a log-log scale 
.br
\fIuselegend\fP an optional argument boolean to include a legend 
.br
\fItitle\fP an optional argument string with the plot title 
.br
\fIfilename\fP an optional argument string with the plot filename 
.RE
.PP

.SS "def pinspec\&.plotter\&.plotGroupXS (group_xs, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots a multi-group cross-section as a step function\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotGroupXS(my_group_xs)
.fi
.PP
 
.SS "def pinspec\&.plotter\&.plotMacroXS (material, rxns, loglog = \fCTrue\fP, uselegend = \fCTrue\fP, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots the macroscopic cross-section(s) for one or more reaction rates for a material\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotMacroXS(my_material, 'capture')
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fImaterial\fP the material of interest 
.br
\fIrxns\fP an array of reaction rate types (ie, ['capture, 'elastic']) 
.br
\fIloglog\fP an optional argument to use a log-log scale 
.br
\fIuselegend\fP an optional argument boolean to include a legend 
.br
\fItitle\fP an optional argument string with the plot title 
.br
\fIfilename\fP an optional argument string with the plot filename 
.RE
.PP

.SS "def pinspec\&.plotter\&.plotMicroXS (isotope, rxns, loglog = \fCTrue\fP, uselegend = \fCTrue\fP, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots the microscopoic cross-section(s) for one or more reaction rates for an isotope\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotMicroXS(my_isotope, 'capture')
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIisotope\fP the isotope of interest 
.br
\fIrxns\fP an array of reaction rate types (ie, ['capture, 'elastic']) 
.br
\fIloglog\fP an optional argument to use a log-log scale 
.br
\fIuselegend\fP an optional argument boolean to include a legend 
.br
\fItitle\fP an optional argument string with the plot title 
.br
\fIfilename\fP an optional argument string with the plot filename 
.RE
.PP

.SS "def pinspec\&.plotter\&.plotRI (RI, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots a resonance integral (RIEff or RITrue) as a step function\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotRI(my_resonance_integral)
.fi
.PP
 
.SS "def pinspec\&.plotter\&.plotThermalScattering (isotope, uselegend = \fCTrue\fP, title = \fC''\fP, filename = \fC''\fP)"

.PP
Plots the thermal scattering PDFs and CDFs for an isotope\&. This method generates and saves the plot as a *\&.png in the plotting output directory\&. A user may invoke this function from a PINSPEC Python file as follows:
.PP
.PP
.nf
pinspec\&.plotter\&.plotThermalScattering(my_isotope)
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIisotope\fP the isotope of interest 
.br
\fIuselegend\fP an optional argument boolean to include a legend 
.br
\fItitle\fP an optional argument string with the plot title 
.br
\fIfilename\fP an optional argument string with the plot filename 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
