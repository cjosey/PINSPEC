.TH "pinspec.process.GroupXS" 3 "Wed Apr 10 2013" "Version 0.1" "PINSPEC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
pinspec.process.GroupXS \- 
.PP
A multi-group cross-section for a certain reaction rate\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'pinspec/process\&.py'\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP"
.br
.RI "\fIThe group cross-section constructor\&. \fP"
.ti -1c
.RI "def \fBcomputeGroupXS\fP"
.br
.RI "\fIComputes the multigroup cross-sections from the two tallies\&. \fP"
.ti -1c
.RI "def \fBsetName\fP"
.br
.RI "\fISets the name of this group cross-section\&. \fP"
.ti -1c
.RI "def \fBgetName\fP"
.br
.RI "\fIReturns the name of the \fBGroupXS\fP object\&. \fP"
.ti -1c
.RI "def \fBgetNumXS\fP"
.br
.RI "\fIReturns the number of multi-group cross-section values\&. \fP"
.ti -1c
.RI "def \fBgetXS\fP"
.br
.RI "\fIRetrurns an array of the batch-averaged multi-group cross-sections\&. \fP"
.ti -1c
.RI "def \fBgetVariances\fP"
.br
.RI "\fIReturns an array of the multi-group cross-section variances\&. \fP"
.ti -1c
.RI "def \fBgetStandardDeviation\fP"
.br
.RI "\fIReturns an array of the multi-group cross-section standard deviations\&. \fP"
.ti -1c
.RI "def \fBgetRelativeError\fP"
.br
.RI "\fIReturns an array of the multi-group cross-section relative errors\&. \fP"
.ti -1c
.RI "def \fBgetEnergyBands\fP"
.br
.RI "\fIReturns an array of the multi-group cross-section energy band centers\&. \fP"
.ti -1c
.RI "def \fBgetGroupXS\fP"
.br
.RI "\fIReturns a reference to this \fBGroupXS\fP object\&. \fP"
.ti -1c
.RI "def \fBprintXS\fP"
.br
.RI "\fIPrints a formatted table of the multi-group cross-sections to the screen\&. \fP"
.ti -1c
.RI "def \fBoutputXStoFile\fP"
.br
.RI "\fIPrints the multi-group cross-section data and batch statistics to a file\&. \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fB_name\fP"
.br
.RI "\fIThe name of the multi-group cross-section\&. \fP"
.ti -1c
.RI "\fB_xs\fP"
.br
.RI "\fIThe DERIVED tally used to store the multi-group cross-sections\&. \fP"
.ti -1c
.RI "\fB_flux\fP"
.br
.RI "\fIThe FLUX tally used to compute the multi-group cross-sections\&. \fP"
.ti -1c
.RI "\fB_rate\fP"
.br
.RI "\fIThe REACTION_RATE tally used to compute the multi-group cross-sections\&. \fP"
.ti -1c
.RI "\fB_num_xs\fP"
.br
.RI "\fIThe number of multi-group cross-sections\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
A multi-group cross-section for a certain reaction rate\&. 

This class represents a multi-group cross-section with some energy bands for a certain reaction rate\&. By default, the group cross-section is a macroscopic cross-section $ (cm^{-1}) $\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def pinspec\&.process\&.GroupXS\&.__init__ (self, tally1, tally2, name = \fC''\fP)"

.PP
The group cross-section constructor\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.br
\fItally1\fP one of the tallies needed to compute a multi-group cross-section 
.br
\fItally2\fP one of the tallies needed to compute a multi-group cross-section 
.br
\fIname\fP an optional argument string for the name of the multi-group cross-section 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "def pinspec\&.process\&.GroupXS\&.computeGroupXS (self, tally1, tally2)"

.PP
Computes the multigroup cross-sections from the two tallies\&. This method checks that one of the tallies input is a reaction rate and the other is a flux, with the same bin edges\&. If the batch statistics for both tallies have been computed, it computes the multigroup cross-section as follows:
.PP
.PP
.nf
sigma_groups = reaction_rate / flux
.fi
.PP
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.br
\fItally1\fP one of the tallies needed to compute a multi-group cross-section 
.br
\fItally2\fP one of the tallies needed to compute a multi-group cross-section 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getEnergyBands (self)"

.PP
Returns an array of the multi-group cross-section energy band centers\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-section energy band centers def getEnergyBandsCenters(self): Returns an array of the multi-group cross-section energy band values\&. 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-section energy band values 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getGroupXS (self)"

.PP
Returns a reference to this \fBGroupXS\fP object\&. \fBParameters:\fP
.RS 4
\fIself\fP \fBGroupXS\fP the object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to the \fBGroupXS\fP object 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getName (self)"

.PP
Returns the name of the \fBGroupXS\fP object\&. Returns an empty string if no name has been specified by the user\&. 
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a string with the name of the \fBGroupXS\fP 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getNumXS (self)"

.PP
Returns the number of multi-group cross-section values\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
the number of multi-group cross-section values 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getRelativeError (self)"

.PP
Returns an array of the multi-group cross-section relative errors\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-section relative errors 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getStandardDeviation (self)"

.PP
Returns an array of the multi-group cross-section standard deviations\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-section standard deviations 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getVariances (self)"

.PP
Returns an array of the multi-group cross-section variances\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-section variances 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.getXS (self)"

.PP
Retrurns an array of the batch-averaged multi-group cross-sections\&. \fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.RE
.PP
\fBReturns:\fP
.RS 4
a numpy array of the multi-group cross-sections 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.outputXStoFile (self, filename = \fC''\fP)"

.PP
Prints the multi-group cross-section data and batch statistics to a file\&. Since the multi-group cross-sections are stored as a DERIVED tally type, this method prints the cross-section data to a file using the \fBTally::outputBatchStatistics()\fP method\&. An auto-generated filename will be created with the format 'tally-#\&.data' where # is an auto-incremented integer for each tally output data file created\&. 
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.br
\fIfilename\fP An optional filename for the output file 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.printXS (self, uncertainties = \fCFalse\fP)"

.PP
Prints a formatted table of the multi-group cross-sections to the screen\&. The multi-group cross-sections and their uncertainties (optional) will be printed as a formatted table to the screen\&. 
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.br
\fIuncertainties\fP whether or not to print tally statistics (default is false) 
.RE
.PP
\fBReturns:\fP
.RS 4
a reference to the \fBGroupXS\fP object 
.RE
.PP

.SS "def pinspec\&.process\&.GroupXS\&.setName (self, name = \fC''\fP)"

.PP
Sets the name of this group cross-section\&. This is useful when one wishes to print the multi-group cross-section values to the screen or a file since it will be identifiable by the user-defined name\&. 
.PP
\fBParameters:\fP
.RS 4
\fIself\fP the \fBGroupXS\fP object pointer 
.br
\fIname\fP the name of the \fBGroupXS\fP object 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for PINSPEC from the source code\&.
