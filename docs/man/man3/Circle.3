.TH "Circle" 3 "Thu Apr 11 2013" "Version v0.1" "Doxygen" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Circle \- 
.PP
The \fBCircle\fP is the locus of a point equidistant from a fixed point\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'pinspec/src/Surface\&.h'\fP
.PP
Inherits \fBSurface\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBCircle\fP ()"
.br
.RI "\fIThe \fBCircle\fP constructor\&. \fP"
.ti -1c
.RI "virtual \fB~Circle\fP ()"
.br
.RI "\fI\fBCircle\fP destructor\&. \fP"
.ti -1c
.RI "float \fBgetX0\fP ()"
.br
.RI "\fIReturns the x-coordinate of the circle's center\&. \fP"
.ti -1c
.RI "float \fBgetY0\fP ()"
.br
.RI "\fIReturns the y-coordinate of the circle's center\&. \fP"
.ti -1c
.RI "float \fBgetRadius\fP ()"
.br
.RI "\fIReturns the radius of the circle\&. \fP"
.ti -1c
.RI "void \fBsetX0\fP (float x0)"
.br
.RI "\fISets the x-coordinate of the circle's center\&. \fP"
.ti -1c
.RI "void \fBsetY0\fP (float y0)"
.br
.RI "\fISets the y-coordinate of the circle's center\&. \fP"
.ti -1c
.RI "void \fBsetRadius\fP (float r)"
.br
.RI "\fISets the radius of the circle's center\&. \fP"
.ti -1c
.RI "float \fBcomputeNearestDistance\fP (\fBneutron\fP *\fBneutron\fP)"
.br
.RI "\fIComputes the nearest distance to the \fBCircle\fP along a neutron's trajectory\&. \fP"
.ti -1c
.RI "bool \fBonSurface\fP (\fBneutron\fP *\fBneutron\fP)"
.br
.RI "\fIChecks whether a neutron is on the \fBCircle\fP\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "float \fB_r\fP"
.br
.ti -1c
.RI "float \fB_r_squared\fP"
.br
.ti -1c
.RI "float \fB_x0\fP"
.br
.ti -1c
.RI "float \fB_y0\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBCircle\fP is the locus of a point equidistant from a fixed point\&. 

The \fBCircle\fP represents a set of points within a given distance from a point in the xy-plane called the circle's center\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Circle::Circle ()"

.PP
The \fBCircle\fP constructor\&. Assigns default values for the center of the circle (x=0, y=0) and a radius of 0\&. 
.SH "Member Function Documentation"
.PP 
.SS "float Circle::computeNearestDistance (\fBneutron\fP *neutron)\fC [virtual]\fP"

.PP
Computes the nearest distance to the \fBCircle\fP along a neutron's trajectory\&. \fBParameters:\fP
.RS 4
\fIneutron\fP a pointer to a Neutron struct 
.RE
.PP

.PP
Implements \fBSurface\fP\&.
.SS "float Circle::getRadius ()"

.PP
Returns the radius of the circle\&. \fBReturns:\fP
.RS 4
the circle radius 
.RE
.PP

.SS "float Circle::getX0 ()"

.PP
Returns the x-coordinate of the circle's center\&. \fBReturns:\fP
.RS 4
the x-coordinate of the circle center 
.RE
.PP

.SS "float Circle::getY0 ()"

.PP
Returns the y-coordinate of the circle's center\&. \fBReturns:\fP
.RS 4
the y-coordinate of the circle center 
.RE
.PP

.SS "bool Circle::onSurface (\fBneutron\fP *neutron)\fC [virtual]\fP"

.PP
Checks whether a neutron is on the \fBCircle\fP\&. The threshold used to compute whether or not a neutron is on the on the neutron is 1E-6 for the difference between the distance between the neutron and the circle center and the radius of the circle\&. 
.PP
\fBParameters:\fP
.RS 4
\fIneutron\fP the neutron of interest 
.RE
.PP
\fBReturns:\fP
.RS 4
true if on the \fBXPlane\fP, otherwise false 
.RE
.PP

.PP
Implements \fBSurface\fP\&.
.SS "void Circle::setRadius (floatr)"

.PP
Sets the radius of the circle's center\&. \fBParameters:\fP
.RS 4
\fIr\fP the circle's radius 
.RE
.PP

.SS "void Circle::setX0 (floatx0)"

.PP
Sets the x-coordinate of the circle's center\&. \fBParameters:\fP
.RS 4
\fIx0\fP the x-coordinate of the circle center 
.RE
.PP

.SS "void Circle::setY0 (floaty0)"

.PP
Sets the y-coordinate of the circle's center\&. \fBParameters:\fP
.RS 4
\fIy0\fP the y-coordinate of the circle center 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "float Circle::_r\fC [protected]\fP"
The circle's radius 
.SS "float Circle::_r_squared\fC [protected]\fP"
The square of the circle's radius 
.SS "float Circle::_x0\fC [protected]\fP"
The x-coordinate of the circle's center 
.SS "float Circle::_y0\fC [protected]\fP"
The y-coordinate of the circle's center 

.SH "Author"
.PP 
Generated automatically by Doxygen from the source code\&.
