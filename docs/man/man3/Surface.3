.TH "Surface" 3 "Wed Apr 10 2013" "Version 0.1" "PINSPEC" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Surface \- 
.PP
The \fBSurface\fP represents a quadratic surface in the xy-plane\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include 'pinspec/src/Surface\&.h'\fP
.PP
Inherited by \fBCircle\fP, \fBXPlane\fP, and \fBYPlane\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSurface\fP ()"
.br
.RI "\fI\fBSurface\fP class constructor\&. \fP"
.ti -1c
.RI "virtual \fB~Surface\fP ()"
.br
.RI "\fI\fBSurface\fP destructor\&. \fP"
.ti -1c
.RI "\fBboundaryType\fP \fBgetBoundaryType\fP () const "
.br
.RI "\fIReturns this \fBSurface\fP's boundary type\&. \fP"
.ti -1c
.RI "void \fBsetBoundaryType\fP (\fBboundaryType\fP type)"
.br
.RI "\fISets the boundary type for this \fBSurface\fP\&. \fP"
.ti -1c
.RI "virtual float \fBcomputeNearestDistance\fP (\fBneutron\fP *\fBneutron\fP)=0"
.br
.RI "\fIComputes the nearest distance between a neutron at some location and this surface\&. \fP"
.ti -1c
.RI "virtual bool \fBonSurface\fP (\fBneutron\fP *\fBneutron\fP)=0"
.br
.RI "\fIDetermines whether or not a neutron at some location is on the surface\&. \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fBboundaryType\fP \fB_boundary_type\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBSurface\fP represents a quadratic surface in the xy-plane\&. 

The \fBSurface\fP is an abstract class with stub for the function calls needed to trace rays across a 2D geometry\&. Each surface type to be used in a simulation is a subclass of the \fBSurface\fP class 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Surface::Surface ()"

.PP
\fBSurface\fP class constructor\&. By default, the constructor sets the surface boundary conditions to vacuum\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual float Surface::computeNearestDistance (\fBneutron\fP *neutron)\fC [pure virtual]\fP"

.PP
Computes the nearest distance between a neutron at some location and this surface\&. This virtual class method must be implemented for each surface type to be used in a PINSPEC simulation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIneutron\fP the neutron of interest 
.RE
.PP

.PP
Implemented in \fBCircle\fP, \fBYPlane\fP, and \fBXPlane\fP\&.
.SS "\fBboundaryType\fP Surface::getBoundaryType () const"

.PP
Returns this \fBSurface\fP's boundary type\&. Returns the \fBSurface\fP's boundary type which can be REFLECTIVE, VACUUM, or INTERFACE\&. 
.PP
\fBReturns:\fP
.RS 4
\fBSurface\fP boundary type 
.RE
.PP

.SS "virtual bool Surface::onSurface (\fBneutron\fP *neutron)\fC [pure virtual]\fP"

.PP
Determines whether or not a neutron at some location is on the surface\&. This virtual class method must be implemented for each surface type to be used in a PINSPEC simulation\&. 
.PP
\fBParameters:\fP
.RS 4
\fIneutron\fP the neutron of interest 
.RE
.PP

.PP
Implemented in \fBCircle\fP, \fBYPlane\fP, and \fBXPlane\fP\&.
.SS "void Surface::setBoundaryType (\fBboundaryType\fPtype)"

.PP
Sets the boundary type for this \fBSurface\fP\&. Sets the \fBSurface\fP's boundary type which can be REFLECTIVE, VACUUM, or INTERFACE)\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP the boundary type 
.RE
.PP

.SH "Member Data Documentation"
.PP 
.SS "\fBboundaryType\fP Surface::_boundary_type\fC [protected]\fP"
The boundary condition for this \fBSurface\fP 

.SH "Author"
.PP 
Generated automatically by Doxygen for PINSPEC from the source code\&.
